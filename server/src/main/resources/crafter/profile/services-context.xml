<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!--
    Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired, as well as JSR
    250's and @Resource (if available), JAX-WS's @WebServiceRef (if available), EJB3's @EJB
    (if available), and JPA's @PersistenceContext and @PersistenceUnit (if available).
    -->
    <context:annotation-config/>

    <aop:aspectj-autoproxy/>

    <task:annotation-driven executor="taskExecutor"/>
    <task:executor id="taskExecutor" pool-size="${crafter.profile.task.executor.poolSize}"
                   queue-capacity="${crafter.profile.task.executor.queueCapacity}"/>

    <bean id="crafter.loggedAspect" class="org.craftercms.commons.logging.LoggedAspect"/>

    <bean name="crafter.profileProperties"
          class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <!-- <property name="ignoreResourceNotFound" value="true"/> -->
        <property name="locations">
            <list>
                <value>classpath:crafter/profile/server-config.properties</value>
                <value>classpath*:crafter/profile/extension/server-config.properties</value>
            </list>
        </property>
    </bean>

    <!-- Mongo -->
    <bean id="crafter.profile.mongoClient" class="org.craftercms.commons.mongo.MongoClientFromUriFactoryBean">
        <constructor-arg name="uri" value="${crafter.profile.mongodb.connection.connectionStr}"/>
    </bean>

    <bean id="crafter.jongo" class="org.craftercms.commons.mongo.JongoFactoryBean">
        <constructor-arg name="dbName" value="${crafter.profile.mongodb.connection.dbName}"/>
        <constructor-arg name="mongo" ref="crafter.profile.mongoClient"/>
        <property name="username" value="${crafter.profile.mongodb.connection.dbUsername}"/>
        <property name="password" value="${crafter.profile.mongodb.connection.dbPassword}"/>
    </bean>

    <bean id="crafter.jongoQueries" class="org.craftercms.commons.mongo.JongoQueries" init-method="init">
        <property name="resources">
            <list>
                <value>classpath:/crafter/profile/access-token-manager-queries.xml</value>
                <value>classpath:/crafter/profile/profile-queries.xml</value>
                <value>classpath:/crafter/profile/extension/profile-queries.xml</value>
            </list>
        </property>
    </bean>

    <bean id="crafter.jongoRepositoryBase" class="org.craftercms.commons.mongo.AbstractJongoRepository"
          init-method="init" abstract="true">
        <property name="jongo" ref="crafter.jongo"/>
        <property name="queries" ref="crafter.jongoQueries"/>
    </bean>

    <bean id="crafter.accessTokenRepository" class="org.craftercms.profile.repositories.impl.AccessTokenRepositoryImpl"
          parent="crafter.jongoRepositoryBase"/>

    <bean id="crafter.profileRepository" class="org.craftercms.profile.repositories.impl.ProfileRepositoryImpl"
          parent="crafter.jongoRepositoryBase"/>

    <bean id="crafter.tenantRepository" class="org.craftercms.profile.repositories.impl.TenantRepositoryImpl"
          parent="crafter.jongoRepositoryBase"/>

    <bean id="crafter.ticketRepository" class="org.craftercms.profile.repositories.impl.TicketRepositoryImpl"
          parent="crafter.jongoRepositoryBase"/>

    <bean id="crafter.verificationTokenRepository"
          class="org.craftercms.profile.repositories.impl.VerificationTokenRepositoryImpl"
          parent="crafter.jongoRepositoryBase"/>

    <bean id="crafter.persistentLoginRepository"
          class="org.craftercms.profile.repositories.impl.PersistentLoginRepositoryImpl"
          parent="crafter.jongoRepositoryBase"/>

    <bean id="crafter.mongoInitialResourcesRunner" class="org.craftercms.profile.tasks.InitialResourcesRunner">
        <constructor-arg name="mongo" ref="crafter.profile.mongoClient"/>
        <constructor-arg name="dbName" value="${crafter.profile.mongodb.connection.dbName}"/>
        <constructor-arg name="runOnInit" value="${crafter.profile.mongodb.resources.runOnInit}"/>
        <constructor-arg name="resourcesPaths">
            <bean class="org.apache.commons.lang3.StringUtils" factory-method="split">
                <constructor-arg index="0" value="${crafter.profile.mongodb.resources.paths}"/>
                <constructor-arg index="1" value=","/>
            </bean>
        </constructor-arg>
    </bean>
    <!-- Mail -->

    <bean id="crafter.mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${crafter.profile.mail.host}"/>
        <property name="port" value="${crafter.profile.mail.port}"/>
        <property name="protocol" value="${crafter.profile.mail.protocol}"/>
        <property name="username" value="${crafter.profile.mail.username}"/>
        <property name="password" value="${crafter.profile.mail.password}"/>
        <property name="defaultEncoding" value="${crafter.profile.mail.encoding}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${crafter.profile.mail.smtp.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${crafter.profile.mail.smtp.starttls.enable}</prop>
            </props>
        </property>
    </bean>

    <bean id="crafter.mailFreeMarkerConfig"
          class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPaths" value="${crafter.profile.mail.templates.path}"/>
        <property name="defaultEncoding" value="${crafter.profile.mail.encoding}"/>
    </bean>

    <bean id="crafter.emailFactory" class="org.craftercms.commons.mail.impl.EmailFactoryImpl">
        <constructor-arg name="mailSender" ref="crafter.mailSender"/>
        <property name="freeMarkerConfig" ref="crafter.mailFreeMarkerConfig"/>
        <property name="templateEncoding" value="${crafter.profile.mail.encoding}"/>
    </bean>

    <!-- Permissions -->

    <bean id="crafter.accessTokenSubjectResolver" class="org.craftercms.profile.permissions.AccessTokenSubjectResolver"/>

    <bean id="crafter.tenantPermissionResolver" class="org.craftercms.profile.permissions.TenantPermissionResolver"/>

    <bean id="crafter.attributePermissionResolver"
          class="org.craftercms.profile.permissions.AttributePermissionResolver"/>

    <bean id="crafter.tenantPermissionEvaluator"
          class="org.craftercms.commons.security.permissions.impl.PermissionEvaluatorImpl">
        <constructor-arg name="subjectResolver" ref="crafter.accessTokenSubjectResolver"/>
        <constructor-arg name="permissionResolver" ref="crafter.tenantPermissionResolver"/>
    </bean>

    <bean id="crafter.attributePermissionEvaluator"
          class="org.craftercms.commons.security.permissions.impl.PermissionEvaluatorImpl">
        <constructor-arg name="subjectResolver" ref="crafter.accessTokenSubjectResolver"/>
        <constructor-arg name="permissionResolver" ref="crafter.attributePermissionResolver"/>
    </bean>

    <!-- Services -->

    <bean id="crafter.accessTokenService" class="org.craftercms.profile.services.impl.AccessTokenServiceImpl">
        <constructor-arg name="accessTokenRepository" ref="crafter.accessTokenRepository"/>
    </bean>

    <bean id="crafter.verificationService" class="org.craftercms.profile.services.impl.VerificationServiceImpl">
        <constructor-arg name="permissionEvaluator" ref="crafter.tenantPermissionEvaluator"/>
        <constructor-arg name="tokenRepository" ref="crafter.verificationTokenRepository"/>
        <constructor-arg name="emailFactory" ref="crafter.emailFactory"/>
        <constructor-arg name="tokenMaxAge" value="${crafter.profile.verification.token.maxAge}"/>
    </bean>

    <bean id="crafter.tenantService" class="org.craftercms.profile.services.impl.TenantServiceImpl">
        <constructor-arg name="tenantPermissionEvaluator" ref="crafter.tenantPermissionEvaluator"/>
        <constructor-arg name="attributePermissionEvaluator" ref="crafter.attributePermissionEvaluator"/>
        <constructor-arg name="tenantRepository" ref="crafter.tenantRepository"/>
        <constructor-arg name="profileRepository" ref="crafter.profileRepository"/>
        <constructor-arg name="entitlementValidator" ref="crafter.entitlementValidator"/>
        <property name="profileService" ref="crafter.profileService"/>
    </bean>

    <bean id="crafter.profileService" class="org.craftercms.profile.services.impl.ProfileServiceImpl">
        <constructor-arg name="tenantPermissionEvaluator" ref="crafter.tenantPermissionEvaluator"/>
        <constructor-arg name="attributePermissionEvaluator" ref="crafter.attributePermissionEvaluator"/>
        <constructor-arg name="profileRepository" ref="crafter.profileRepository"/>
        <constructor-arg name="verificationService" ref="crafter.verificationService"/>
        <constructor-arg name="newProfileEmailFromAddress" value="${crafter.profile.verification.newProfile.mail.from}"/>
        <constructor-arg name="newProfileEmailSubject" value="${crafter.profile.verification.newProfile.mail.subject}"/>
        <constructor-arg name="newProfileEmailTemplateName" value="${crafter.profile.verification.newProfile.mail.templateName}"/>
        <constructor-arg name="resetPwdEmailFromAddress" value="${crafter.profile.verification.resetPassword.mail.from}"/>
        <constructor-arg name="resetPwdEmailSubject" value="${crafter.profile.verification.resetPassword.mail.subject}"/>
        <constructor-arg name="resetPwdEmailTemplateName" value="${crafter.profile.verification.resetPassword.mail.templateName}"/>
        <constructor-arg name="entitlementValidator" ref="crafter.entitlementValidator"/>
        <property name="validAttachmentMimeTypes" value="${crafter.profile.attachments.validMimeTypes}"/>
        <property name="tenantService" ref="crafter.tenantService"/>
        <property name="authenticationService" ref="crafter.authenticationService"/>
    </bean>

    <bean id="crafter.authenticationService" class="org.craftercms.profile.services.impl.AuthenticationServiceImpl">
        <constructor-arg name="permissionEvaluator" ref="crafter.tenantPermissionEvaluator"/>
        <constructor-arg name="ticketRepository" ref="crafter.ticketRepository"/>
        <constructor-arg name="persistentLoginRepository" ref="crafter.persistentLoginRepository"/>
        <property name="lockTime" value="${crafter.profile.auth.lockTime}"/>
        <property name="failedLoginAttemptsBeforeLock" value="${crafter.profile.auth.failedLoginAttemptsBeforeLock}"/>
        <property name="failedLoginAttemptsBeforeDelay" value="${crafter.profile.auth.failedLoginAttemptsBeforeDelay}"/>
        <property name="profileService" ref="crafter.profileService"/>
    </bean>

    <!-- Quartz -->

    <bean id="crafter.ticketCleanerJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetBeanName" value="crafter.ticketRepository"/>
        <property name="targetMethod" value="removeWithLastRequestTimeOlderThan"/>
        <property name="arguments">
            <array>
                <value>${crafter.profile.auth.ticket.maxAge}</value>
            </array>
        </property>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="crafter.verificationTokenCleanerJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetBeanName" value="crafter.verificationTokenRepository"/>
        <property name="targetMethod" value="removeOlderThan"/>
        <property name="arguments">
            <array>
                <value>${crafter.profile.verification.token.maxAge}</value>
            </array>
        </property>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="crafter.persistentLoginCleanerJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetBeanName" value="crafter.persistentLoginRepository"/>
        <property name="targetMethod" value="removeOlderThan"/>
        <property name="arguments">
            <array>
                <value>${crafter.profile.persistentLogin.maxAge}</value>
            </array>
        </property>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="crafter.ticketCleanerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="startDelay" value="${crafter.profile.auth.ticket.cleaner.startDelay}"/>
        <property name="repeatInterval" value="${crafter.profile.auth.ticket.cleaner.repeatInterval}"/>
        <property name="jobDetail" ref="crafter.ticketCleanerJobDetail"/>
    </bean>

    <bean id="crafter.verificationTokenCleanerTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="startDelay" value="${crafter.profile.verification.token.cleaner.startDelay}"/>
        <property name="repeatInterval" value="${crafter.profile.verification.token.cleaner.repeatInterval}"/>
        <property name="jobDetail" ref="crafter.verificationTokenCleanerJobDetail"/>
    </bean>

    <bean id="crafter.persistentLoginCleanerTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="startDelay" value="${crafter.profile.persistentLogin.cleaner.startDelay}"/>
        <property name="repeatInterval" value="${crafter.profile.persistentLogin.cleaner.repeatInterval}"/>
        <property name="jobDetail" ref="crafter.persistentLoginCleanerJobDetail"/>
    </bean>

    <bean id="crafter.schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="crafter.ticketCleanerTrigger"/>
                <ref bean="crafter.verificationTokenCleanerTrigger"/>
                <ref bean="crafter.persistentLoginCleanerTrigger"/>
            </list>
        </property>
    </bean>

<!--    <bean id="multipartResolver"-->
<!--          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
<!--        <property name="maxUploadSize" value="${crafter.profile.attachments.maxSizeUpload}"/>-->
<!--        <property name="maxInMemorySize" value="${crafter.profile.attachments.maxSizeMem}"/>-->
<!--    </bean>-->

    <!-- Entitlements -->
    <bean id="crafter.entitlementsProvider" class="org.craftercms.profile.entitlement.ProfileLicenseUsageProvider">
        <constructor-arg name="tenantRepository" ref="crafter.tenantRepository"/>
        <constructor-arg name="profileRepository" ref="crafter.profileRepository"/>
    </bean>

    <import resource="classpath*:crafter/profile/extension/services-context.xml"/>
    <import resource="classpath:crafter/entitlements/entitlements-context.xml"/>

</beans>